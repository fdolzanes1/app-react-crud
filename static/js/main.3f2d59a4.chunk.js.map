{"version":3,"sources":["components/Header/index.js","components/Contact/index.js","components/Footer/index.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","className","Brand","href","Nav","Link","Component","FormContact","state","model","nome","email","telefone","setValues","e","field","target","value","setState","create","props","contactCreate","PubSub","subscribe","topic","contact","Form","FormGroup","Label","for","Input","id","this","type","placeholder","onChange","Button","onClick","color","ContactFilter","event","updateSearch","handleChange","bind","searchText","ListContact","delete","_id","deleteContact","onEdit","publish","contacts","filter","toString","toLowerCase","indexOf","Table","responsive","map","key","size","ContactBox","url","message","text","alert","save","data","requestInfo","method","body","JSON","stringify","headers","Headers","fetch","then","response","json","newContact","push","timerMessage","catch","console","log","updatedContact","findIndex","rows","duration","setTimeout","docs","inputValue","Alert","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"+SAgBeA,E,iLAXX,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAU,aACzC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,YACA,kBAACC,EAAA,EAAD,CAAKH,UAAU,WACb,kBAACG,EAAA,EAAIC,KAAL,CAAUF,KAAK,KAAf,wB,GANWG,a,yECEfC,G,iNAEJC,MAAQ,CACNC,MAAO,CACLC,KAAM,GACNC,MAAO,GACPC,SAAU,K,EAIdC,UAAY,SAACC,EAAGC,GAAW,IACjBN,EAAU,EAAKD,MAAfC,MACRA,EAAMM,GAASD,EAAEE,OAAOC,MACxB,EAAKC,SAAS,CAAET,W,EAGlBU,OAAU,WACR,EAAKD,SAAS,CAAET,MAAM,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,MACvD,EAAKQ,MAAMC,cAAc,EAAKb,MAAMC,Q,oFAGhB,IAAD,OACnBa,IAAOC,UAAU,gBAAgB,SAACC,EAAOC,GACvC,EAAKP,SAAS,CAAET,MAAOgB,S,+BAIjB,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,OAAOd,MAAOe,KAAKxB,MAAMC,MAAMC,KAAMuB,KAAK,OAAOC,YAAY,oBAAoBC,SAAW,SAAArB,GAAC,OAAI,EAAKD,UAAUC,EAAG,YAE/H,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,QAAQd,MAAOe,KAAKxB,MAAMC,MAAME,MAAOsB,KAAK,OAAOC,YAAY,qBAAqBC,SAAW,SAAArB,GAAC,OAAI,EAAKD,UAAUC,EAAG,aAElI,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,YAAX,YACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,WAAWd,MAAOe,KAAKxB,MAAMC,MAAMG,SAAUqB,KAAK,OAAOC,YAAY,wBAAwBC,SAAW,SAAArB,GAAC,OAAI,EAAKD,UAAUC,EAAG,gBAE3I,kBAACa,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,CAAQC,QAASL,KAAKb,OAAQmB,MAAM,WAApC,wB,GA3CgBhC,cAkDpBiC,E,qLAEUC,GACZR,KAAKZ,MAAMqB,aAAaD,EAAMxB,OAAOC,S,+BAIrC,OACE,kBAACa,EAAA,EAAD,CAAOG,KAAK,OAAOC,YAAY,iBAAiBjC,UAAU,eAAekC,SAAUH,KAAKU,aAAaC,KAAKX,MAAOf,MAAOe,KAAKZ,MAAMwB,iB,GAR7GtC,aAatBuC,E,2MAEJC,OAAS,SAACC,GACR,EAAK3B,MAAM4B,cAAcD,I,EAG3BE,OAAS,SAAExB,GACTH,IAAO4B,QAAQ,eAAgBzB,I,sEAGzB0B,GAAW,IAAD,OAChB,OAAKnB,KAAKZ,MAAMgC,OAGTD,EAASC,QAAO,SAAC3B,GAAD,OAAaA,EAAQf,KAAK2C,WAAWC,cAAcC,QAAQ,EAAKnC,MAAMgC,OAAOE,gBAAkB,KAF7GH,I,+BAKD,IAAD,OACCA,EAAanB,KAAKZ,MAAlB+B,SACR,OACE,kBAACK,EAAA,EAAD,CAAOC,YAAU,GACf,2BAAOxD,UAAU,cACf,4BACE,oCACA,qCACA,wCACA,yCAGJ,+BAEI+B,KAAKoB,OAAOD,GACXO,KAAI,SAAAjC,GAAO,OACV,wBAAIkC,IAAKlC,EAAQsB,KACf,4BAAKtB,EAAQf,MACb,4BAAKe,EAAQd,OACb,4BAAKc,EAAQb,UACb,4BAAI,kBAACwB,EAAA,EAAD,CAAQE,MAAM,OAAOsB,KAAK,KAAKvB,QAAU,SAAAvB,GAAC,OAAI,EAAKmC,OAAQxB,KAA3D,UACF,kBAACW,EAAA,EAAD,CAAQE,MAAM,SAASsB,KAAK,KAAKvB,QAAU,SAAAvB,GAAC,OAAI,EAAKgC,OAAQrB,EAAQsB,OAArE,sB,GAtCQzC,aAiDLuD,E,2MAEnBC,IAAM,6D,EAENtD,MAAQ,CACN2C,SAAU,GACRY,QAAS,CACPC,KAAM,GACNC,MAAO,IAEXb,OAAQ,M,EAUVc,KAAO,SAACzC,GACN,IAAI0C,EAAO,CACTpB,IAAKtB,EAAQsB,IACbrC,KAAMe,EAAQf,KACdC,MAAOc,EAAQd,MACfC,SAAUa,EAAQb,UAGdwD,EAAc,CAClBC,OAAoB,MAAZF,EAAKpB,IAAc,MAAM,OACjCuB,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,IAAIC,QAAQ,CACnB,eAAgB,sBAKH,MAAZP,EAAKpB,IACR4B,MAAM,EAAKb,IAAKM,GACfQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAe,IACb5B,EAAa,EAAK3C,MAAlB2C,SACNA,EAAS6B,KAAKD,GACd,EAAK7D,SAAS,CAAEiC,WAAUY,QAAS,CAAEC,KAAM,0BAA2BC,MAAO,aAC7E,EAAKgB,aAAa,QAEnBC,OAAO,SAAApE,GAAC,OAAIqE,QAAQC,IAAItE,MAEzB6D,MAAM,GAAD,OAAK,EAAKb,IAAV,YAAmBK,EAAKpB,KAAQqB,GAClCQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAS,GAAmB,IACjBlC,EAAa,EAAK3C,MAAlB2C,SAGNA,EADe,EAAK3C,MAAM2C,SAASmC,WAAU,SAAA7D,GAAO,OAAIA,EAAQsB,MAAQoB,EAAKpB,QACxDsC,EACrB,EAAKnE,SAAS,CAAEiC,WAAUY,QAAS,CAAEC,KAAM,qBAAsBC,MAAO,UACxE,EAAKgB,aAAa,QAEnBC,OAAO,SAAApE,GAAC,OAAIqE,QAAQC,IAAItE,O,EAK/BgC,OAAS,SAACC,GACR4B,MAAM,GAAD,OAAK,EAAKb,IAAV,YAAmBf,GAAQ,CAAEsB,OAAQ,WACvCO,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAW,GACJ,IAAMpC,EAAW,EAAK3C,MAAM2C,SAASC,QAAO,SAAA3B,GAAO,OAAIA,EAAQsB,MAAQA,KACvE,EAAK7B,SAAS,CAAEiC,WAAWY,QAAS,CAAEC,KAAM,mBAAoBC,MAAO,YACvE,EAAKgB,aAAa,QAEnBC,OAAM,SAAApE,GAAC,OAAIqE,QAAQC,IAAItE,O,EAG5BmE,aAAe,SAACO,GACdC,YAAW,WACT,EAAKvE,SAAS,CAAE6C,QAAS,CAAEC,KAAM,GAAIC,MAAO,QAC3CuB,I,mFAhEgB,IAAD,OAClBb,MAAM3C,KAAK8B,KACRc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAK3D,SAAS,CAAEiC,SAAU0B,EAASa,UACpDR,OAAM,SAAApE,GAAC,OAAIqE,QAAQC,IAAItE,Q,mCA+Dd6E,GACC3D,KAAKxB,MAAM4C,OAExBpB,KAAKd,SAAS,CACZkC,OAAQuC,M,+BAKV,OACE,yBAAK1F,UAAU,eAEiB,KAA5B+B,KAAKxB,MAAMuD,QAAQC,KACf,kBAAC4B,EAAA,EAAD,CAAOtD,MAAON,KAAKxB,MAAMuD,QAAQE,MAAOhE,UAAU,eAAlD,IAAkE+B,KAAKxB,MAAMuD,QAAQC,KAArF,KACA,GAGN,yBAAK/D,UAAU,OACb,yBAAKA,UAAU,YACb,mDACA,kBAAC,EAAD,CAAaoB,cAAeW,KAAKkC,QAEnC,yBAAKjE,UAAU,YACb,iDACA,kBAAC,EAAD,CAAgBwC,aAAcT,KAAKS,aAAaE,KAAKX,MAAOY,WAAYZ,KAAKxB,MAAM4C,SACnF,kBAAC,EAAD,CAAaD,SAAUnB,KAAKxB,MAAM2C,SAAUH,cAAgBhB,KAAKc,OAASM,OAAQpB,KAAKxB,MAAM4C,gB,GAzGjE9C,aCvGzBuF,E,iLATX,OAEE,kBAAC/F,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAU,gBACzC,kBAACH,EAAA,EAAOI,MAAR,8B,GALaI,aCeNwF,G,uLAVX,OACE,yBAAK7F,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANUK,cCDlByF,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3f2d59a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"fixed-top\">\r\n        <Navbar.Brand href=\"#\">Contacts</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\">React + NodeJS</Nav.Link>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PubSub from 'pubsub-js';\r\nimport { Table, Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\r\nimport './styles.css';\r\n\r\nclass FormContact extends Component {\r\n\r\n  state = { \r\n    model: {\r\n      nome: '', \r\n      email: '', \r\n      telefone: '' \r\n    } \r\n  };\r\n\r\n  setValues = (e, field) => {\r\n    const { model } = this.state;\r\n    model[field] = e.target.value;\r\n    this.setState({ model });\r\n  }\r\n\r\n  create  = () => {\r\n    this.setState({ model:{ nome: '', email: '', telefone: '' }  });\r\n    this.props.contactCreate(this.state.model);\r\n  }\r\n\r\n  componentWillMount() {\r\n    PubSub.subscribe('edit-contact', (topic, contact) => {\r\n      this.setState({ model: contact });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form >\r\n        <FormGroup>\r\n          <Label for=\"nome\">Nome</Label>\r\n          <Input id=\"nome\" value={this.state.model.nome} type=\"text\" placeholder=\"Digite o seu Nome\" onChange={ e => this.setValues(e, 'nome')} ></Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"email\">Email</Label>\r\n          <Input id=\"email\" value={this.state.model.email} type=\"text\" placeholder=\"Digite o seu Email\" onChange={ e => this.setValues(e, 'email')} ></Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for=\"telefone\">Telefone</Label>\r\n          <Input id=\"telefone\" value={this.state.model.telefone} type=\"text\" placeholder=\"Digite o seu Telefone\" onChange={ e => this.setValues(e, 'telefone')} ></Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Button onClick={this.create} color=\"primary\">Salvar Contato</Button>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nclass ContactFilter extends Component {\r\n  \r\n  handleChange (event) {\r\n    this.props.updateSearch(event.target.value);\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <Input type=\"text\" placeholder=\"Find a Contact\" className=\"input-search\" onChange={this.handleChange.bind(this)} value={this.props.searchText} />\r\n    )\r\n  }\r\n}\r\n\r\nclass ListContact extends Component {\r\n  \r\n  delete = (_id) => {\r\n    this.props.deleteContact(_id);\r\n  }\r\n\r\n  onEdit = ( contact ) => {\r\n    PubSub.publish('edit-contact', contact);\r\n  }\r\n\r\n  filter (contacts) {\r\n    if (!this.props.filter) {\r\n      return contacts\r\n    }\r\n    return contacts.filter((contact) => contact.nome.toString().toLowerCase().indexOf(this.props.filter.toLowerCase()) >= 0)\r\n  }\r\n  \r\n  render() {\r\n    const { contacts } = this.props;\r\n    return (\r\n      <Table responsive>\r\n        <thead className=\"thead-dark\">\r\n          <tr>\r\n            <th>Nome</th>\r\n            <th>Email</th>\r\n            <th>Telefone</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            this.filter(contacts)\r\n            .map(contact => (\r\n              <tr key={contact._id} >\r\n                <td>{contact.nome}</td>\r\n                <td>{contact.email}</td>\r\n                <td>{contact.telefone}</td>\r\n                <td><Button color=\"info\" size=\"sm\" onClick={ e => this.onEdit( contact ) }>Editar</Button>\r\n                  <Button color=\"danger\" size=\"sm\" onClick={ e => this.delete( contact._id )}>Excluir</Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class ContactBox extends Component {\r\n\r\n  url = \"https://nameless-badlands-32634.herokuapp.com/api/contacts\";\r\n\r\n  state = {\r\n    contacts: [],\r\n      message: {\r\n        text: '',\r\n        alert: ''\r\n      }, \r\n    filter: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(this.url)\r\n      .then(response => response.json())\r\n      .then(response => this.setState({ contacts: response.docs }))\r\n      .catch(e => console.log(e));\r\n  }\r\n\r\n  save = (contact) => {\r\n    let data = {\r\n      _id: contact._id,\r\n      nome: contact.nome, \r\n      email: contact.email, \r\n      telefone: contact.telefone\r\n    }; \r\n\r\n    const requestInfo = {\r\n      method: data._id != null ? 'PUT':'POST',\r\n      body: JSON.stringify(data), \r\n      headers: new Headers({\r\n        'Content-type': 'application/json'\r\n      })\r\n\r\n    };\r\n    \r\n    if ( data._id == null) {\r\n      fetch(this.url, requestInfo)\r\n      .then(response => response.json())\r\n      .then(newContact => {\r\n        let { contacts } = this.state; \r\n        contacts.push(newContact); \r\n        this.setState({ contacts, message: { text: \"Novo Contado Adicionado\", alert: 'success' } });\r\n        this.timerMessage(3000);\r\n      })\r\n      .catch( e => console.log(e) );\r\n    } else {\r\n      fetch(`${ this.url }/${ data._id }`, requestInfo)\r\n        .then(response => response.json())\r\n        .then(updatedContact => {\r\n          let { contacts } = this.state;\r\n          \r\n          let position = this.state.contacts.findIndex(contact => contact._id === data._id);\r\n          contacts[position] = updatedContact;\r\n          this.setState({ contacts, message: { text: \"Contato Atualizado\", alert: 'info' } });\r\n          this.timerMessage(3000);\r\n        })\r\n        .catch( e => console.log(e) );\r\n    }\r\n    \r\n  }\r\n\r\n  delete = (_id) => {\r\n    fetch(`${ this.url }/${ _id }`, { method: 'DELETE' })\r\n      .then(response => response.json())\r\n      .then(rows => {\r\n        const contacts = this.state.contacts.filter(contact => contact._id !== _id);\r\n        this.setState({ contacts,  message: { text: 'Contato Deletado', alert: 'danger' } });\r\n        this.timerMessage(3000);\r\n      })\r\n      .catch(e => console.log(e));\r\n  };\r\n\r\n  timerMessage = (duration) => {\r\n    setTimeout(() => {\r\n      this.setState({ message: { text: '', alert: ''} });\r\n    }, duration);\r\n  }\r\n\r\n  updateSearch (inputValue) {\r\n    let filter = this.state.filter;\r\n    \r\n    this.setState({\r\n      filter: inputValue\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"contact-box\">\r\n        {\r\n          this.state.message.text !== ''? (\r\n              <Alert color={this.state.message.alert} className=\"text-center\"> {this.state.message.text} </Alert>\r\n          ) : ''\r\n        }\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <h2>Cadastro de Contato</h2>\r\n            <FormContact contactCreate={this.save}/>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <h2>Listar de Contato</h2>\r\n            <ContactFilter  updateSearch={this.updateSearch.bind(this)} searchText={this.state.filter} />\r\n            <ListContact contacts={this.state.contacts} deleteContact={ this.delete } filter={this.state.filter} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      \r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"fixed-bottom\">\r\n        <Navbar.Brand>Fabiano Dolzanes</Navbar.Brand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport ContactBox from './components/Contact';\r\nimport Footer from './components/Footer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header/>\r\n        <ContactBox/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}